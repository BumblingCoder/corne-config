/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {

    behaviors {
        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        keyboard {
            bindings = <
&none    &kp Q           &kp W           &kp E             &kp R        &kp T            &kp Y    &kp U        &kp I              &kp O            &kp P               &none
&none    &rpi LEFT_GUI A  &rpi LEFT_ALT S  &rpi LEFT_SHIFT D  &rpi LCTRL F  &kp G            &kp H    &rpi RCTRL J  &rpi RIGHT_SHIFT K  &rpi RIGHT_ALT L  &rpi RIGHT_GUI SEMI  &kp SQT
&to 4    &kp Z           &kp X           &kp C             &kp V        &kp B            &kp N    &kp M        &kp COMMA          &kp DOT          &kp FSLH            &none
                                           &mo 3             &lt 1 SPACE  &kp BACKSPACE    &kp TAB  &lt 2 ENTER  &kp ESCAPE
            >;
        };

        bluetooth {
            bindings = <
&bt BT_CLR  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &kp LC(Z)     &kp RC(X)     &kp RC(C)     &kp RC(V)     &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        numbers_symbols {
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        Numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp KP_N7        &kp KP_N8        &kp KP_N9        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp KP_N4        &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &trans
                        &trans  &trans  &trans    &kp ENTER  &kp KP_N0        &kp KP_DOT
            >;
        };

        Gaming {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I       &kp O    &kp P     &none
&kp LSHFT  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K       &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA   &kp DOT  &kp FSLH  &to 0
               &none &kp SPACE  &kp BACKSPACE &kp TAB  &kp ENTER  &kp ESCAPE
            >;
        };

    };
};
